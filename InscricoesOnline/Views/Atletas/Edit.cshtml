@model InscricoesOnline.Models.Atleta

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <h3 class="page-header">
                <small>
                    <a class="text-primary" href="@Url.Action("Index", "Admin")"><i class="fa fa-home fa-fw"></i>Início</a>
                    <span class="text-muted">/</span>
                    <span class="text-muted"><a class="text-primary" href="@Url.Action("Lista", "Atletas")">Atletas</a></span>
                    <span class="text-muted">/</span>
                    <span class="text-muted text-capitalize"><a class="text-primary" href="@Url.Action("Visualizar", "Atletas", new { id = Model.Id })">@Model.Nome.ToLower()</a></span>
                    <span class="text-muted">/</span>
                    <span class="text-muted">Edição</span>
                </small>
            </h3>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            @using (Html.BeginForm("EditSalvar", "Atletas", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-con panel panel-primary fv-form fv-form-bootstrap", @id = "form-fili", @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <header class="panel-heading">
                    <i class="fa fa-file-text-o"></i> Dados cadastrais
                </header>
                <div class="panel-body">
                    <div class="clearfix">
                        <div class="alert alert-danger pull-left">
                            <p>* Campos obrigatórios</p>
                        </div>
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.DataRegistro)

                    <div class="text-center">
                        @Html.CheckBoxFor(model => model.Ativo, new { @class = "chkAtivo hidden", @checked = "true" })
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group" style="margin-bottom: 20px;">
                        <label for="txtAtivarInscricao">Categoria ParaTaekwondo:</label>
                        <br />
                        @Html.CheckBoxFor(model => model.Parataekwondo, new { @class = "chkSimNao hidden", @checked = "true" })
                    </div>

                    <div class="form-group">
                        <label for="txtNome"><span class="text-alerta">*</span> Nome:</label>
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control text-uppercase", @id = "txtNome", @name = "txtNome", @maxlength = 100 } })
                    </div>

                    <div class="form-group">
                        <label for="drpAcademia"><span class="text-alerta">*</span> Equipe:</label>
                        @Html.DropDownListFor(model => model.EquipeId, ((IEnumerable<InscricoesOnline.Models.Equipe>)ViewBag.Academias).Select(option => new SelectListItem
                        {
                            Text = option.Nome,
                            Value = option.Id.ToString(),
                            Selected = (Model != null) && (option.Id == Model.EquipeId)
                        }), new { @class = "form-control select2-offscreen", @id = "drpAcademia" })
                    </div>

                    <div class="form-group">
                        <label for="drpFaixa"><span class="text-alerta">*</span> Faixa:</label>
                        @Html.DropDownListFor(model => model.FaixaId, ((IEnumerable<InscricoesOnline.Models.Faixa>)ViewBag.Faixas).Select(option => new SelectListItem
                        {
                            Text = option.Descricao,
                            Value = option.Id.ToString(),
                            Selected = (Model != null) && (option.Id == Model.FaixaId)
                        }), new { @class = "form-control" })
                    </div>

                    <div class="row">
                        <div class="form-group col-lg-3">
                            <label for="txtDataNascimento"><span class="text-alerta">*</span> Data de Nascimento:</label>
                            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control data", @id = "txtDataNascimento", @name = "txtDataNascimento" } })
                        </div>

                        <div class="form-group col-lg-3">
                            <label for="drpSexo"><span class="text-alerta">*</span> Sexo:</label>
                            @Html.DropDownListFor(model => model.Sexo, new SelectList(
                               new System.Collections.Generic.List<object>{
                                                        new {value = "M", sexo = "Masculino"},
                                                        new {value = "F", sexo = "Feminino"}
                               }, "value", "sexo", "Masculino"), new { @class = "form-control", @id = "drpSexo", @name = "drpSexo" })
                        </div>

                        <div class="form-group col-lg-3">
                            <label for="txtCPF">CPF:</label>
                            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control cpf", @id = "txtCPF", @name = "txtCPF", @maxlength = 20 } })
                        </div>
                    </div>

                    <div style="clear: both" />
                    <div class="panel-footer text-center">
                        <button type="submit" class="btn btn-success"><i class="fa fa-check-circle"></i> Salvar edição</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts{
    <script>

        $("#drpAcademia").select2();
        $(".data").mask("99/99/9999");

        $("#form-fili")
            .find('AcademiaId')
            .change(function (e) {
                $('#form-fili').formValidation('revalidateField', 'AcademiaId');
            })
            .end()

            .find('[name="DataNascimento"]')
            .change(function (e) {
                $('#form-fili').formValidation('revalidateField', 'DataNascimento');
            })
            .end()

            .formValidation({
                framework: '',
                err: {
                    container: 'tooltip'
                },
                excluded: [':disabled', ':hidden', ':not(:visible)', '.disabled'],
                icon: {
                    valid: "fa fa-check",
                    invalid: "fa fa-times",
                    validating: "fa fa-refresh fa-spin"
                },
                fields: {
                    RG: {
                        trigger: 'blur',
                        message: "Este RG já existe no sistema",
                        validators: {
                            remote: {
                                url: '/Filiados/ValidarRG/{rg}',
                                data: function (validator, $field, value) {
                                    return {
                                        rg: value,
                                        id: @(Model == null ? 0 : Model.Id),
                                    };
                                },
                                type: 'POST'
                            }
                        }
                    },
                    CPF: {
                        trigger: 'blur',
                        message: "Este CPF já existe no sistema",
                        validators: {
                            remote: {
                                url: '/Filiados/ValidarCPF/{cpf}',
                                data: function (validator, $field, value) {
                                    return {
                                        cpf: value,
                                        id: @(Model == null ? 0 : Model.Id),
                                    };
                                },
                                type: 'POST'
                            }
                        }
                    },
                    Nome: {
                        validators: {
                            notEmpty: {
                                message: 'Campo obrigatório'
                            }
                        }
                    },
                    'EquipeId': {
                        validators: {
                            callback: {
                                message: 'Campo obrigatório',
                                callback: function (value, validator, $field) {
                                    return (value !== "");
                                }
                            }
                        }
                    },
                    'FaixaId': {
                        validators: {
                            notEmpty: {
                                message: 'Campo obrigatório'
                            }
                        }
                    },
                    DataNascimento: {
                        validators: {
                            date: {
                                format: 'DD/MM/YYYY',
                                message: 'Data inválida'
                            },
                            notEmpty: {
                                message: 'Campo obrigatório'
                            }
                        }
                    },
                    Sexo: {
                        validators: {
                            notEmpty: {
                                message: 'Campo obrigatório'
                            }
                        }
                    }
                }
            }).on('err.field.fv', function (e, data) {
                var $icon = data.element.data('fv.icon'),
                    title = $icon.data('bs.tooltip').getTitle();

                $icon.tooltip('destroy').tooltip({
                    html: true,
                    placement: 'left',
                    title: title,
                    container: 'body'
                });
            });

    </script>
}